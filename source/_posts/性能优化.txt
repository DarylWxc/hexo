了解网络交互过程

url->dns获取IP->建立TCP->发起HTTP->相应解析->浏览器渲染

HTTP，FTP，SSH     DNS
TCP（可靠协议） UDP（不可靠）（应用场景）
IP寻址

优化：
1.分片
2.慢启动 让网络包的大小逐渐匹配网速
处理大数据的场景下，都可以借鉴TCP这个优化的方法

基于TCP之上的http协议
基于tcp自己定制client和server：单纯发送一些数据


HTTP基于TCP，定制了解析的逻辑

静态资源contentHash 更好的利用缓存

强缓存，协商缓存


浏览器渲染优化：
1.解析html（AST） dom tree
2.解析css csstree ，css的选择器
3.合并成render tree
4.浏览调用操作系统渲染

优化策略1（简单粗暴）：
·文件加载的更少
·代码执行的更少
1.缓存，CDN
2.图片优化（情况最多,收益最大）
。JPEG（文件较小）
。PNG（文件较大）
。GIF
。WebP
。压缩工具，不同尺寸
。渐进加载(先加载占位=>低像素=>实际)
3.静态文件优化
静态资源压缩
4.浏览器优化
5.文件合并压缩等

过渡优化是万恶之源，合适的优化最合理。

节流 防抖
重绘 回流
按需执行
框架优化
html，js，css

前端性能指标：
FP（首次绘制）：
FCP（首次内容绘制）：
FMP（首次有效绘制）：
TTI（可交互时间）：



Lighthouse

SEO优化：
1.分析网站情况
2.根据数据指定优化方案
3.执行力


基础优化技巧：
一,内部结构优化
1.全站TDK优化，让每一个页面都有一个主词
2.sitemap设置
3.robots设置
4.301和404设置，301主要是让不带WWW的跳转到带WWW的主域上
5.链接层级，对于一个普通企业站来说，链接最多3级，是完全够用了的
6.目录层级，最好控制在三层内，利于用户体验
7.关键词布局，堆砌关键词
8.检查网站内部是否有死链
二，内容布局
1.内链建设，做好页面的tag，相关推荐，上一篇，下一篇，不需要再文章里锚文本
三，外部优化
1.绑定各大搜索引擎后台，提交sitemap
2.购买有权重有真实流量的友链，能提高收录
3.去各大免费的网站目录平台提交网站
4.发外链

